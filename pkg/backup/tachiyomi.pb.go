// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: tachiyomi.proto

package backup

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Backup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) val backupManga: List<BackupManga>
	Manga []*Manga `protobuf:"bytes,1,rep,name=manga" json:"manga,omitempty"`
	// @ProtoNumber(2) var backupCategories: List<BackupCategory> =
	Categories []*Category `protobuf:"bytes,2,rep,name=categories" json:"categories,omitempty"`
	// @ProtoNumber(101) var backupSources: List<BackupSource> =
	Sources []*Source `protobuf:"bytes,101,rep,name=sources" json:"sources,omitempty"`
}

func (x *Backup) Reset() {
	*x = Backup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backup) ProtoMessage() {}

func (x *Backup) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backup.ProtoReflect.Descriptor instead.
func (*Backup) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{0}
}

func (x *Backup) GetManga() []*Manga {
	if x != nil {
		return x.Manga
	}
	return nil
}

func (x *Backup) GetCategories() []*Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Backup) GetSources() []*Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) var name: String
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// @ProtoNumber(2) var order: Int =
	Order *int32 `protobuf:"varint,2,opt,name=order" json:"order,omitempty"`
	// @ProtoNumber(100) var flags: Int =
	Flags *int32 `protobuf:"varint,100,opt,name=flags" json:"flags,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{1}
}

func (x *Category) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Category) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *Category) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) var url: String
	Url *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	// @ProtoNumber(2) var name: String
	Name *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	// @ProtoNumber(3) var scanlator: String?
	Scanlator *string `protobuf:"bytes,3,opt,name=scanlator" json:"scanlator,omitempty"`
	// @ProtoNumber(4) var read: Boolean =
	Read *bool `protobuf:"varint,4,opt,name=read" json:"read,omitempty"`
	// @ProtoNumber(5) var bookmark: Boolean =
	Bookmark *bool `protobuf:"varint,5,opt,name=bookmark" json:"bookmark,omitempty"`
	// @ProtoNumber(6) var lastPageRead: Int =
	LastPageRead *int32 `protobuf:"varint,6,opt,name=lastPageRead" json:"lastPageRead,omitempty"`
	// @ProtoNumber(7) var dateFetch: Long =
	DateFetch *int64 `protobuf:"varint,7,opt,name=dateFetch" json:"dateFetch,omitempty"`
	// @ProtoNumber(8) var dateUpload: Long =
	DateUpload *int64 `protobuf:"varint,8,opt,name=dateUpload" json:"dateUpload,omitempty"`
	// @ProtoNumber(9) var chapterNumber: Float =
	ChapterNumber *float32 `protobuf:"fixed32,9,opt,name=chapterNumber" json:"chapterNumber,omitempty"`
	// @ProtoNumber(10) var sourceOrder: Int =
	SourceOrder *int32 `protobuf:"varint,10,opt,name=sourceOrder" json:"sourceOrder,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{2}
}

func (x *Chapter) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Chapter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Chapter) GetScanlator() string {
	if x != nil && x.Scanlator != nil {
		return *x.Scanlator
	}
	return ""
}

func (x *Chapter) GetRead() bool {
	if x != nil && x.Read != nil {
		return *x.Read
	}
	return false
}

func (x *Chapter) GetBookmark() bool {
	if x != nil && x.Bookmark != nil {
		return *x.Bookmark
	}
	return false
}

func (x *Chapter) GetLastPageRead() int32 {
	if x != nil && x.LastPageRead != nil {
		return *x.LastPageRead
	}
	return 0
}

func (x *Chapter) GetDateFetch() int64 {
	if x != nil && x.DateFetch != nil {
		return *x.DateFetch
	}
	return 0
}

func (x *Chapter) GetDateUpload() int64 {
	if x != nil && x.DateUpload != nil {
		return *x.DateUpload
	}
	return 0
}

func (x *Chapter) GetChapterNumber() float32 {
	if x != nil && x.ChapterNumber != nil {
		return *x.ChapterNumber
	}
	return 0
}

func (x *Chapter) GetSourceOrder() int32 {
	if x != nil && x.SourceOrder != nil {
		return *x.SourceOrder
	}
	return 0
}

type History struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) var url: String
	Url *string `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	// @ProtoNumber(2) var lastRead: Long
	LastRead *int64 `protobuf:"varint,2,req,name=lastRead" json:"lastRead,omitempty"`
}

func (x *History) Reset() {
	*x = History{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *History) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*History) ProtoMessage() {}

func (x *History) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use History.ProtoReflect.Descriptor instead.
func (*History) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{3}
}

func (x *History) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *History) GetLastRead() int64 {
	if x != nil && x.LastRead != nil {
		return *x.LastRead
	}
	return 0
}

type Manga struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) var source: Long
	Source *int64 `protobuf:"varint,1,req,name=source" json:"source,omitempty"`
	// @ProtoNumber(2) var url: String
	Url *string `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
	// @ProtoNumber(3) var title: String =
	Title *string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	// @ProtoNumber(4) var artist: String?
	Artist *string `protobuf:"bytes,4,opt,name=artist" json:"artist,omitempty"`
	// @ProtoNumber(5) var author: String?
	Author *string `protobuf:"bytes,5,opt,name=author" json:"author,omitempty"`
	// @ProtoNumber(6) var description: String?
	Description *string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	// @ProtoNumber(7) var genre: List<String> =
	Genre []string `protobuf:"bytes,7,rep,name=genre" json:"genre,omitempty"`
	// @ProtoNumber(8) var status: Int =
	Status *int32 `protobuf:"varint,8,opt,name=status" json:"status,omitempty"`
	// @ProtoNumber(9) var thumbnailUrl: String?
	ThumbnailUrl *string `protobuf:"bytes,9,opt,name=thumbnailUrl" json:"thumbnailUrl,omitempty"`
	// @ProtoNumber(13) var dateAdded: Long =
	DateAdded *int64 `protobuf:"varint,13,opt,name=dateAdded" json:"dateAdded,omitempty"`
	// @ProtoNumber(14) var viewer: Int =
	Viewer *int32 `protobuf:"varint,14,opt,name=viewer" json:"viewer,omitempty"`
	// @ProtoNumber(16) var chapters: List<BackupChapter> =
	Chapters []*Chapter `protobuf:"bytes,16,rep,name=chapters" json:"chapters,omitempty"`
	// @ProtoNumber(17) var categories: List<Int> =
	Categories []int32 `protobuf:"varint,17,rep,name=categories" json:"categories,omitempty"`
	// @ProtoNumber(18) var tracking: List<BackupTracking> =
	Tracking []*Tracking `protobuf:"bytes,18,rep,name=tracking" json:"tracking,omitempty"`
	// @ProtoNumber(100) var favorite: Boolean =
	Favorite *bool `protobuf:"varint,100,opt,name=favorite" json:"favorite,omitempty"`
	// @ProtoNumber(101) var chapterFlags: Int =
	ChapterFlags *int32 `protobuf:"varint,101,opt,name=chapterFlags" json:"chapterFlags,omitempty"`
	// @ProtoNumber(103) var viewer_flags: Int?
	ViewerFlags *int32 `protobuf:"varint,103,opt,name=viewer_flags,json=viewerFlags" json:"viewer_flags,omitempty"`
	// @ProtoNumber(104) var history: List<BackupHistory> =
	History []*History `protobuf:"bytes,104,rep,name=history" json:"history,omitempty"`
}

func (x *Manga) Reset() {
	*x = Manga{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Manga) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manga) ProtoMessage() {}

func (x *Manga) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manga.ProtoReflect.Descriptor instead.
func (*Manga) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{4}
}

func (x *Manga) GetSource() int64 {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return 0
}

func (x *Manga) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Manga) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Manga) GetArtist() string {
	if x != nil && x.Artist != nil {
		return *x.Artist
	}
	return ""
}

func (x *Manga) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

func (x *Manga) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Manga) GetGenre() []string {
	if x != nil {
		return x.Genre
	}
	return nil
}

func (x *Manga) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Manga) GetThumbnailUrl() string {
	if x != nil && x.ThumbnailUrl != nil {
		return *x.ThumbnailUrl
	}
	return ""
}

func (x *Manga) GetDateAdded() int64 {
	if x != nil && x.DateAdded != nil {
		return *x.DateAdded
	}
	return 0
}

func (x *Manga) GetViewer() int32 {
	if x != nil && x.Viewer != nil {
		return *x.Viewer
	}
	return 0
}

func (x *Manga) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

func (x *Manga) GetCategories() []int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Manga) GetTracking() []*Tracking {
	if x != nil {
		return x.Tracking
	}
	return nil
}

func (x *Manga) GetFavorite() bool {
	if x != nil && x.Favorite != nil {
		return *x.Favorite
	}
	return false
}

func (x *Manga) GetChapterFlags() int32 {
	if x != nil && x.ChapterFlags != nil {
		return *x.ChapterFlags
	}
	return 0
}

func (x *Manga) GetViewerFlags() int32 {
	if x != nil && x.ViewerFlags != nil {
		return *x.ViewerFlags
	}
	return 0
}

func (x *Manga) GetHistory() []*History {
	if x != nil {
		return x.History
	}
	return nil
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) var name: String =
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// @ProtoNumber(2) var sourceId: Long
	SourceId *int64 `protobuf:"varint,2,req,name=sourceId" json:"sourceId,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{5}
}

func (x *Source) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Source) GetSourceId() int64 {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return 0
}

type Tracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @ProtoNumber(1) var syncId: Int
	SyncId *int32 `protobuf:"varint,1,req,name=syncId" json:"syncId,omitempty"`
	// @ProtoNumber(2) var libraryId: Long
	LibraryId *int64 `protobuf:"varint,2,req,name=libraryId" json:"libraryId,omitempty"`
	// @ProtoNumber(3) var mediaId: Int =
	MediaId *int32 `protobuf:"varint,3,opt,name=mediaId" json:"mediaId,omitempty"`
	// @ProtoNumber(4) var trackingUrl: String =
	TrackingUrl *string `protobuf:"bytes,4,opt,name=trackingUrl" json:"trackingUrl,omitempty"`
	// @ProtoNumber(5) var title: String =
	Title *string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	// @ProtoNumber(6) var lastChapterRead: Float =
	LastChapterRead *float32 `protobuf:"fixed32,6,opt,name=lastChapterRead" json:"lastChapterRead,omitempty"`
	// @ProtoNumber(7) var totalChapters: Int =
	TotalChapters *int32 `protobuf:"varint,7,opt,name=totalChapters" json:"totalChapters,omitempty"`
	// @ProtoNumber(8) var score: Float =
	Score *float32 `protobuf:"fixed32,8,opt,name=score" json:"score,omitempty"`
	// @ProtoNumber(9) var status: Int =
	Status *int32 `protobuf:"varint,9,opt,name=status" json:"status,omitempty"`
	// @ProtoNumber(10) var startedReadingDate: Long =
	StartedReadingDate *int64 `protobuf:"varint,10,opt,name=startedReadingDate" json:"startedReadingDate,omitempty"`
	// @ProtoNumber(11) var finishedReadingDate: Long =
	FinishedReadingDate *int64 `protobuf:"varint,11,opt,name=finishedReadingDate" json:"finishedReadingDate,omitempty"`
}

func (x *Tracking) Reset() {
	*x = Tracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tachiyomi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracking) ProtoMessage() {}

func (x *Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_tachiyomi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracking.ProtoReflect.Descriptor instead.
func (*Tracking) Descriptor() ([]byte, []int) {
	return file_tachiyomi_proto_rawDescGZIP(), []int{6}
}

func (x *Tracking) GetSyncId() int32 {
	if x != nil && x.SyncId != nil {
		return *x.SyncId
	}
	return 0
}

func (x *Tracking) GetLibraryId() int64 {
	if x != nil && x.LibraryId != nil {
		return *x.LibraryId
	}
	return 0
}

func (x *Tracking) GetMediaId() int32 {
	if x != nil && x.MediaId != nil {
		return *x.MediaId
	}
	return 0
}

func (x *Tracking) GetTrackingUrl() string {
	if x != nil && x.TrackingUrl != nil {
		return *x.TrackingUrl
	}
	return ""
}

func (x *Tracking) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Tracking) GetLastChapterRead() float32 {
	if x != nil && x.LastChapterRead != nil {
		return *x.LastChapterRead
	}
	return 0
}

func (x *Tracking) GetTotalChapters() int32 {
	if x != nil && x.TotalChapters != nil {
		return *x.TotalChapters
	}
	return 0
}

func (x *Tracking) GetScore() float32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *Tracking) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *Tracking) GetStartedReadingDate() int64 {
	if x != nil && x.StartedReadingDate != nil {
		return *x.StartedReadingDate
	}
	return 0
}

func (x *Tracking) GetFinishedReadingDate() int64 {
	if x != nil && x.FinishedReadingDate != nil {
		return *x.FinishedReadingDate
	}
	return 0
}

var File_tachiyomi_proto protoreflect.FileDescriptor

var file_tachiyomi_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x61, 0x63, 0x68, 0x69, 0x79, 0x6f, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x74, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x05, 0x6d,
	0x61, 0x6e, 0x67, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4d, 0x61, 0x6e,
	0x67, 0x61, 0x52, 0x05, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x37, 0x0a,
	0x07, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x22, 0x95, 0x04, 0x0a, 0x05, 0x4d, 0x61, 0x6e, 0x67, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x65,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x72, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x67, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76,
	0x69, 0x65, 0x77, 0x65, 0x72, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x68, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x68, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x38,
	0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xf2, 0x02, 0x0a, 0x08, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x79, 0x6e, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x5a,
	0x08, 0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
}

var (
	file_tachiyomi_proto_rawDescOnce sync.Once
	file_tachiyomi_proto_rawDescData = file_tachiyomi_proto_rawDesc
)

func file_tachiyomi_proto_rawDescGZIP() []byte {
	file_tachiyomi_proto_rawDescOnce.Do(func() {
		file_tachiyomi_proto_rawDescData = protoimpl.X.CompressGZIP(file_tachiyomi_proto_rawDescData)
	})
	return file_tachiyomi_proto_rawDescData
}

var file_tachiyomi_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_tachiyomi_proto_goTypes = []interface{}{
	(*Backup)(nil),   // 0: Backup
	(*Category)(nil), // 1: Category
	(*Chapter)(nil),  // 2: Chapter
	(*History)(nil),  // 3: History
	(*Manga)(nil),    // 4: Manga
	(*Source)(nil),   // 5: Source
	(*Tracking)(nil), // 6: Tracking
}
var file_tachiyomi_proto_depIdxs = []int32{
	4, // 0: Backup.manga:type_name -> Manga
	1, // 1: Backup.categories:type_name -> Category
	5, // 2: Backup.sources:type_name -> Source
	2, // 3: Manga.chapters:type_name -> Chapter
	6, // 4: Manga.tracking:type_name -> Tracking
	3, // 5: Manga.history:type_name -> History
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_tachiyomi_proto_init() }
func file_tachiyomi_proto_init() {
	if File_tachiyomi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tachiyomi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tachiyomi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tachiyomi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tachiyomi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*History); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tachiyomi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Manga); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tachiyomi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tachiyomi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tachiyomi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tachiyomi_proto_goTypes,
		DependencyIndexes: file_tachiyomi_proto_depIdxs,
		MessageInfos:      file_tachiyomi_proto_msgTypes,
	}.Build()
	File_tachiyomi_proto = out.File
	file_tachiyomi_proto_rawDesc = nil
	file_tachiyomi_proto_goTypes = nil
	file_tachiyomi_proto_depIdxs = nil
}
